{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "553500331809889106"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Azure region of the deployment"
      }
    },
    "storageAccountPrefix": {
      "type": "string",
      "defaultValue": "enterprise",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "blobContainerName": {
      "type": "string",
      "defaultValue": "app-a-blob",
      "metadata": {
        "description": "Name of the Blob Container"
      }
    },
    "userManagedIdentityName": {
      "type": "string",
      "defaultValue": "appAOwner",
      "metadata": {
        "description": "Name of the User Managed Identity"
      }
    },
    "blobOwnerRoleId": {
      "type": "string",
      "defaultValue": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
    },
    "blobContributorRoleId": {
      "type": "string",
      "defaultValue": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
    }
  },
  "variables": {
    "saName": "[format('{0}{1}', parameters('storageAccountPrefix'), substring(uniqueString(resourceGroup().id), 0, 6))]",
    "conditionStr": "[format('((!(ActionMatches{{''Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read''}}) AND !(ActionMatches{{''Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write''}}) ) OR (@Resource[Microsoft.Storage/storageAccounts/blobServices/containers:name] StringEquals ''{0}''))', parameters('blobContainerName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('saName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', variables('saName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('saName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}/{2}', variables('saName'), 'default', parameters('blobContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('saName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}_Identity', parameters('userManagedIdentityName'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', variables('saName'), 'default', parameters('blobContainerName'))]",
      "name": "[guid('r_attachBlobOwnerPermsToRole', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_Identity', parameters('userManagedIdentityName'))), parameters('blobOwnerRoleId'))]",
      "properties": {
        "description": "Blob Owner Permission to ResourceGroup scope",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('blobOwnerRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_Identity', parameters('userManagedIdentityName'))), '2023-01-31').principalId]",
        "conditionVersion": "2.0",
        "condition": "[variables('conditionStr')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('saName'), 'default', parameters('blobContainerName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_Identity', parameters('userManagedIdentityName')))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('saName')]"
    },
    "blobContainerName": {
      "type": "string",
      "value": "[parameters('blobContainerName')]"
    },
    "userManagedRoleName": {
      "type": "string",
      "value": "[format('{0}_Identity', parameters('userManagedIdentityName'))]"
    }
  }
}